# coding: utf-8

"""
    PS RESTful Service API

    A proxy service for PromoStandards SOAP to a REST API  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from psrestful.api_client import ApiClient


class InvoiceApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def get_invoices(self, query_type, supplier_code, **kwargs):  # noqa: E501
        """Get Invoices  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_invoices(query_type, supplier_code, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param PsDomainModelInvoiceQueryType query_type: (required)
        :param object supplier_code: (required)
        :param object body:
        :param object x_forwarded_for:
        :param object x_account_id:
        :param object reference_number:
        :param object requested_date:
        :param object available_timestamp:
        :param object environment:
        :return: GetInvoiceResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.get_invoices_with_http_info(query_type, supplier_code, **kwargs)  # noqa: E501
        else:
            (data) = self.get_invoices_with_http_info(query_type, supplier_code, **kwargs)  # noqa: E501
            return data

    def get_invoices_with_http_info(self, query_type, supplier_code, **kwargs):  # noqa: E501
        """Get Invoices  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_invoices_with_http_info(query_type, supplier_code, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param PsDomainModelInvoiceQueryType query_type: (required)
        :param object supplier_code: (required)
        :param object body:
        :param object x_forwarded_for:
        :param object x_account_id:
        :param object reference_number:
        :param object requested_date:
        :param object available_timestamp:
        :param object environment:
        :return: GetInvoiceResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['query_type', 'supplier_code', 'body', 'x_forwarded_for', 'x_account_id', 'reference_number', 'requested_date', 'available_timestamp', 'environment']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_invoices" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'query_type' is set
        if ('query_type' not in params or
                params['query_type'] is None):
            raise ValueError("Missing the required parameter `query_type` when calling `get_invoices`")  # noqa: E501
        # verify the required parameter 'supplier_code' is set
        if ('supplier_code' not in params or
                params['supplier_code'] is None):
            raise ValueError("Missing the required parameter `supplier_code` when calling `get_invoices`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'supplier_code' in params:
            path_params['supplier_code'] = params['supplier_code']  # noqa: E501

        query_params = []
        if 'query_type' in params:
            query_params.append(('query_type', params['query_type']))  # noqa: E501
        if 'reference_number' in params:
            query_params.append(('reference_number', params['reference_number']))  # noqa: E501
        if 'requested_date' in params:
            query_params.append(('requested_date', params['requested_date']))  # noqa: E501
        if 'available_timestamp' in params:
            query_params.append(('available_timestamp', params['available_timestamp']))  # noqa: E501
        if 'environment' in params:
            query_params.append(('environment', params['environment']))  # noqa: E501

        header_params = {}
        if 'x_forwarded_for' in params:
            header_params['X-Forwarded-For'] = params['x_forwarded_for']  # noqa: E501
        if 'x_account_id' in params:
            header_params['x-account-id'] = params['x_account_id']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['APIKeyHeader', 'HTTPBasic', 'OAuth2PasswordBearer']  # noqa: E501

        return self.api_client.call_api(
            '/v1.0.0/suppliers/{supplier_code}/invoices/', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GetInvoiceResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def get_voided_invoices(self, query_type, supplier_code, **kwargs):  # noqa: E501
        """Get Voided Invoices  # noqa: E501

        This endpoint is used to retrieve a list of voided invoices. When QueryType=1(PO_NUMBER_SEARCH) or 2(INVOICE_NUMBER_SEARCH) reference_number must be filled in.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_voided_invoices(query_type, supplier_code, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param PsDomainModelInvoiceQueryType query_type: (required)
        :param object supplier_code: (required)
        :param object body:
        :param object x_forwarded_for:
        :param object x_account_id:
        :param object reference_number:
        :param object requested_date:
        :param object available_timestamp:
        :param object environment:
        :return: GetVoidedResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.get_voided_invoices_with_http_info(query_type, supplier_code, **kwargs)  # noqa: E501
        else:
            (data) = self.get_voided_invoices_with_http_info(query_type, supplier_code, **kwargs)  # noqa: E501
            return data

    def get_voided_invoices_with_http_info(self, query_type, supplier_code, **kwargs):  # noqa: E501
        """Get Voided Invoices  # noqa: E501

        This endpoint is used to retrieve a list of voided invoices. When QueryType=1(PO_NUMBER_SEARCH) or 2(INVOICE_NUMBER_SEARCH) reference_number must be filled in.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_voided_invoices_with_http_info(query_type, supplier_code, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param PsDomainModelInvoiceQueryType query_type: (required)
        :param object supplier_code: (required)
        :param object body:
        :param object x_forwarded_for:
        :param object x_account_id:
        :param object reference_number:
        :param object requested_date:
        :param object available_timestamp:
        :param object environment:
        :return: GetVoidedResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['query_type', 'supplier_code', 'body', 'x_forwarded_for', 'x_account_id', 'reference_number', 'requested_date', 'available_timestamp', 'environment']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method get_voided_invoices" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'query_type' is set
        if ('query_type' not in params or
                params['query_type'] is None):
            raise ValueError("Missing the required parameter `query_type` when calling `get_voided_invoices`")  # noqa: E501
        # verify the required parameter 'supplier_code' is set
        if ('supplier_code' not in params or
                params['supplier_code'] is None):
            raise ValueError("Missing the required parameter `supplier_code` when calling `get_voided_invoices`")  # noqa: E501

        collection_formats = {}

        path_params = {}
        if 'supplier_code' in params:
            path_params['supplier_code'] = params['supplier_code']  # noqa: E501

        query_params = []
        if 'query_type' in params:
            query_params.append(('query_type', params['query_type']))  # noqa: E501
        if 'reference_number' in params:
            query_params.append(('reference_number', params['reference_number']))  # noqa: E501
        if 'requested_date' in params:
            query_params.append(('requested_date', params['requested_date']))  # noqa: E501
        if 'available_timestamp' in params:
            query_params.append(('available_timestamp', params['available_timestamp']))  # noqa: E501
        if 'environment' in params:
            query_params.append(('environment', params['environment']))  # noqa: E501

        header_params = {}
        if 'x_forwarded_for' in params:
            header_params['X-Forwarded-For'] = params['x_forwarded_for']  # noqa: E501
        if 'x_account_id' in params:
            header_params['x-account-id'] = params['x_account_id']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['APIKeyHeader', 'HTTPBasic', 'OAuth2PasswordBearer']  # noqa: E501

        return self.api_client.call_api(
            '/v1.0.0/suppliers/{supplier_code}/voided-invoices/', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='GetVoidedResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
